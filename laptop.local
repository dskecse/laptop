#!/bin/sh

brew tap homebrew/bundle

if [ ! -d "$HOME/.oh-my-zsh/" ]; then
  curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh | xargs sh -c
fi

brew bundle --file=- <<EOF
brew 'awscli'
brew 'duff'
brew 'jq'
brew 'gist'
brew 'graphviz'
brew 'nmap'
brew 'tig'
brew 'dos2unix'
brew 'httpie'

# http://stackoverflow.com/questions/9134423/os-x-lion-attempting-nokogiri-install-libxml2-is-missing
# http://www.nokogiri.org/tutorials/installing_nokogiri.html
brew 'libxml2'
brew 'libxslt'

tap 'homebrew/services'

brew 'mysql', restart_service: true
EOF

# In the past it was necessary to install Apple's XCode IDE to get
# basic tools like GCC, Git and Subversion on your machine, but
# nowadays there is a slim solution by just installing the command line tools
xcode-select --install

brew bundle --file=- <<EOF
brew 'yarn'

# Kindle Previewer replaces KindleGen for converting and bulk validation of eBooks on the CLI
# https://github.com/Homebrew/homebrew-cask/pull/88179
# https://www.amazon.com/gp/feature.html?docId=1000765211
# cask 'kindle-previewer'

tap 'homebrew/cask-versions'
cask 'iterm2'

brew 'go'

brew 'java11'
brew 'elasticsearch', restart_service: true
brew 'kibana'

cask 'emacs'
tap 'dskecse/tap'
cask 'mozart2'

# TODO: set up python development environment
# FYI: python@2 removed by me on Aug 3, 2020
brew 'libsass'
cask 'google-cloud-sdk'

brew 'ghc'
brew 'cabal-install'

brew 'leiningen'
tap 'clojure/tools'
brew 'clojure'

tap 'unused-code/formulae'
brew 'unused'

tap 'mongodb/brew'
brew 'mongodb-community'

cask 'firefox'
tap 'mtslzr/marmaduke-chromium'
cask 'marmaduke-chromium'
cask 'chromedriver'

cask 'ngrok'
cask 'wireshark'

cask 'dropbox'
cask 'skype'
cask 'docker'
cask 'tunnelbear'
cask 'cyberduck' # upload media to S3 buckets

# FYI: Requires tmux.
# https://evilmartians.com/chronicles/introducing-overmind-and-hivemind
brew 'overmind'

brew 'watch'

# Get set for native app development
brew 'cocoapods'
brew 'watchman'

brew 'gpg2'

# To get rid of "gpg: problem with the agent: Inappropriate ioctl for device"
# http://support.gpgtools.org/discussions/problems/42548-passphrase-window-not-shown
brew 'pinentry-mac'

# To only ever launch one instance of gpg agent and share the agents across
# every shell
# http://nullprogram.com/blog/2012/06/08/
brew 'keychain'

brew 'lame'
brew 'ffmpeg'
cask 'handbrake'

# capybara-webkit gem depends on a Webkit implementation from Qt
# https://github.com/thoughtbot/capybara-webkit/wiki/Installing-Qt-and-compiling-capybara-webkit
# brew 'qt@5.5'
# FYI: qt@5.5 has been dropped from Homebrew
# https://github.com/thoughtbot/capybara-webkit/issues/1072#issuecomment-425716220
# Make sure to download and install it manually
# https://github.com/thoughtbot/capybara-webkit/issues/1072#issuecomment-430311949

brew 'postgis'

cask 'postico'

cask 'fliqlo'
EOF

# brew link --force qt55

# To get rid of "error: could not run gpg." w/ git-commit
ln -sf /usr/local/bin/gpg2 /usr/local/bin/gpg

gem_install_or_update 'powder'

# http://stackoverflow.com/questions/21004960/no-module-named-lxml-html-while-running-python-script-on-fedora
sudo pip install lxml

if [ ! -d "$HOME/.vim/" ]; then
  git clone https://github.com/dskecse/dotvim.git ~/.vim
  ln -sf ~/.vim/vimrc ~/.vimrc
fi

if [ ! -d "$HOME/.aws" ]; then
  aws configure
fi

if [ ! -f "$HOME/.gem/credentials" ]; then
  curl -u "$USER" https://rubygems.org/api/v1/api_key.yaml > ~/.gem/credentials
  chmod 0600 ~/.gem/credentials
fi
